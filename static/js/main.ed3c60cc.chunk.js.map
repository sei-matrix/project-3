{"version":3,"sources":["../node_modules/nexmo/lib sync","components/cuisine/Cuisine.jsx","components/recipe/Recipe.jsx","components/recipes/Recipes.jsx","components/checklist/Checklist.jsx","components/details/Details.jsx","components/Navbar.jsx","components/recipe/Header.jsx","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Cuisine","state","to","this","props","name","className","Col","xs","md","Image","src","roundedCircle","Component","Recipe","recipeName","recipe","title","recipeId","Card","style","width","Img","variant","Body","Title","Recipes","recipes","recipesCpy","url","match","params","Math","floor","random","axios","get","then","res","data","results","map","key","recipesCpyAll","CardDeck","setState","Checklist","handleChange","chosen","type","onChange","nexmo","require","apiKey","apiSecret","Details","ingredients","available","text","instructions","boxChecked","availability","ingredientIndex","find","ingredient","extendedIngredients","index","length","push","console","log","Text","ListGroup","Footer","InputGroup","Prepend","FormControl","placeholder","aria-label","aria-describedby","Link","href","onClick","message","sendSms","mobile","withRouter","NavBar","Fragment","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","Header","class","App","cuisineName","offsets","cuisineInfo","cuisine","cuisineInfoCpy","forEach","c","obj","path","component","exact","render","Container","Row","Boolean","window","location","hostname","app","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed3c60cc.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 522;","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom'\nimport Col from \"react-bootstrap/Col\";\nimport Image from \"react-bootstrap/Image\";\n\n\nclass Cuisine extends Component {\n    state = { \n\n    }\n    render() { \n        return ( \n\n            \n            <Link to={`/cuisines/${this.props.name}`}>\n                <div className='cuisine'>\n                 <h1> {this.props.name}</h1>\n\n            <Col xs={6} md={4}>\n            <Image src={`https://spoonacular.com/recipeImages/${this.props.id}-636x393.jpg`} roundedCircle />\n            </Col>\n\n                 {/* <img src={`https://spoonacular.com/recipeImages/${this.props.id}-636x393.jpg`} /> */}\n                \n                </div>\n            </Link>\n         );\n    }\n}\n \nexport default Cuisine;","import React, { Component } from \"react\";\nimport Jumbotron from \"react-bootstrap/Jumbotron\";\nimport Container from \"react-bootstrap/Container\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonToolbar from \"react-bootstrap/ButtonToolbar\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\nimport CardDeck from \"react-bootstrap/CardDeck\";\nimport { Link } from \"react-router-dom\";\n\nclass Recipe extends Component {\n  render() {\n    let recipeName = this.props.recipe.title\n    let recipeId = this.props.recipe.id\n    return (\n      <div>\n      \n          {/* <Link to={`/recipe/${recipeId}`}> */}\n          <Link to={`/recipes/${recipeId}`}>\n          <Card style={{ width: \"18rem\" }}>\n            <Card.Img\n              variant=\"top\"\n              src={`https://spoonacular.com/recipeImages/${recipeId}-636x393.jpg`}\n            />\n            <Card.Body>\n              <Card.Title>{recipeName}</Card.Title>\n            </Card.Body>\n          </Card>\n          </Link>\n      </div>\n    );\n  }\n}\n\nexport default Recipe;\n","import React, { Component } from 'react';\nimport Recipe from '../recipe/Recipe'\nimport axios from 'axios'\nimport CardDeck from \"react-bootstrap/CardDeck\";\n\n\nclass Recipes extends Component {\n    state = { \n        recipes: []\n     }\n\n    componentDidMount() {\n        let recipesCpy = []\n        let url = `https://api.spoonacular.com/recipes/search?apiKey=08df91330e654056a7a82f23569dec0a&cuisine=${this.props.match.params.id}&offset=${Math.floor(Math.random()*50)}&number=12`;\n        axios.get(url).then(res=>{\n        recipesCpy = res.data.results.map(\n            recipe=>\n            <Recipe key={recipe.id} recipe={recipe}/>\n        )\n            \n\n        let recipesCpyAll = <CardDeck> {recipesCpy} </CardDeck>\n        this.setState({recipes: recipesCpyAll})\n        // console.log(res.data.results[0])\n        })\n          return (this.state.recipes)\n    }\n    render() { \n        return ( \n            <div>\n                {this.state.recipes}\n            </div>\n         );\n    }\n}\n \nexport default Recipes;","import React, { Component } from 'react';\n\nclass Checklist extends Component {\n   \n    handleChange = () => {\n        this.props.chosen(this.props.name)\n        }\n    \n    render() { \n     \n        return ( \n          \n        <span className=\"checklistitem\">\n        <input type=\"checkbox\" onChange={this.handleChange}/>\n        {\" \"+this.props.name}\n        </span>  \n         );\n    }\n}\n \nexport default Checklist;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { withRouter } from \"react-router-dom\";\nimport Checklist from '../checklist/Checklist'\n\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/ListGroupItem\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport \"./Details.css\";\n\nconst Nexmo = require(\"nexmo\");\n\nconst nexmo = new Nexmo({\n  apiKey: \"026ac304\",\n  apiSecret: \"ZwfvSATYPhlLtlZ1\",\n});\n\nconst from = \"Nexmo\";\n// const to = \"966506030008\";\n\n//nexmo.message.sendSms(from, to, text);\n\nclass Details extends Component {\n  state = {\n    ingredients: [],\n    available: [],\n    recipeId: this.props.match.params.id,\n    text: \"\",\n    title: \"\",\n    instructions: \"\",\n  };\n\n  boxChecked = (name)=>{\n    let text = this.state.text\n    let availability = [...this.state.available]\n    let ingredientIndex = this.state.ingredients.find(ingredient=> ingredient==name)\n    availability[ingredientIndex] = !availability[ingredientIndex]\n    text += name + \"\\n\";\n    this.setState({available: availability, text})\n  }\n\n\n  componentDidMount() {\n    axios\n      .get(\n        `https://api.spoonacular.com/recipes/${this.props.match.params.id}/information?apiKey=08df91330e654056a7a82f23569dec0a`\n      )\n      .then(res => {\n        const ingredients = res.data.extendedIngredients;\n        let title = res.data.title;\n        let instructions = res.data.instructions;\n        let available = []\n        for (let index = 0; index < ingredients.length; index++) {\n          const element = ingredients[index].name;\n          available.push(false)\n        }\n\n        this.setState({ ingredients, title, instructions });\n      });\n  }\n\n  render() {\n    console.log(this.props);\n    return (\n      <div className=\"container-card\">\n        <Card style={{ width: \"50rem\" }}>\n          <Card.Img\n            variant=\"top\"\n            src={`https://spoonacular.com/recipeImages/${this.state.recipeId}-636x393.jpg`}\n          />\n          <Card.Body>\n            <Card.Title>{this.state.title}</Card.Title>\n            <Card.Text>{this.state.instructions}</Card.Text>\n          </Card.Body>\n          <h3>Ingredients</h3>\n          <ListGroup className=\"list-group-flush\">\n            {this.state.ingredients.map(\n              ingredient => (\n                // <ListGroupItem>\n                <Checklist chosen={this.boxChecked} name={ingredient.name} />\n              )\n              // </ListGroupItem>\n            )}\n          </ListGroup>\n          <Card.Footer>\n          <InputGroup className=\"mb-3\">\n    <InputGroup.Prepend>\n      <InputGroup.Text id=\"basic-addon1\">+966</InputGroup.Text>\n    </InputGroup.Prepend>\n    <FormControl\n      onChange ={this.handleChange}\n      placeholder=\"Mobile Number\"\n      aria-label=\"mobile\"\n      aria-describedby=\"basic-addon1\"\n    />\n  </InputGroup>\n            <Card.Link\n              href=\"#\"\n              onClick={() => nexmo.message.sendSms(from, '966' + this.state.mobile, this.state.text)}\n            >\n              Send SMS\n            </Card.Link>\n          </Card.Footer>\n        </Card>\n\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Details);\n","import React, { Component } from \"react\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Form  from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button  from \"react-bootstrap/Button\";\nimport Navbar  from \"react-bootstrap/Navbar\";\nimport Nav  from \"react-bootstrap/Nav\";\nimport {Link} from 'react-router-dom'\nclass NavBar extends Component {\n  render() {\n    return (\n      <React.Fragment>\n       <Navbar bg=\"light\" expand=\"lg\">\n  <Navbar.Brand >flavor</Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n  <Navbar.Collapse id=\"basic-navbar-nav\">\n    <Nav className=\"mr-auto\">\n      <Link to=\"/\">Cuisines</Link>\n     \n      \n    </Nav>\n   \n  </Navbar.Collapse>\n</Navbar>\n      </React.Fragment>\n    );\n  }\n}\n \nexport default NavBar;","import React, { Component } from 'react';\n\nclass Header extends Component {\n    state = {  }\n    render() { \n\n        return (  \n            <div>\n\n<div class=\"hero-section\">\n <div class=\"hero-section-text\">\n   <h1>flavor</h1>\n   <h5> </h5>\n   \n </div>\n</div>\n            </div>\n        );\n    }\n}\n \nexport default Header;","import React, { Component } from \"react\";\nimport Cuisine from \"./components/cuisine/Cuisine\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Recipes from \"./components/recipes/Recipes\";\nimport Details from \"./components/details/Details\";\nimport Nav from \"./components/Navbar\";\nimport Header from \"./components/recipe/Header\";\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    cuisineName: [\n      \"Japanese\",\n      \"Mexican\",\n      \"Thai\",\n      \"French\",\n      \"Italian\",\n      \"Chinese\",\n      \"Greek\",\n      \"American\"\n    ],\n    offsets: [5, 0, 0, 5, 0, 5, 0, 4],\n    cuisineInfo: []\n  };\n\n  componentDidMount() {\n    let cuisine = \"\";\n    let cuisineInfoCpy = [...this.state.cuisineInfo];\n\n    this.state.cuisineName.forEach((c, index) => {\n      cuisine = c;\n      let url = `https://api.spoonacular.com/recipes/search?apiKey=08df91330e654056a7a82f23569dec0a&cuisine=${cuisine}&offset=${this.state.offsets[index]}&number=1`;\n      axios\n        .get(url)\n        .then(obj => {\n          cuisine = c;\n          cuisineInfoCpy.push(\n            <Cuisine key={index} name={cuisine} id={obj.data.results[0].id} />\n          );\n        })\n        .then(() => {\n          this.setState({ cuisineInfo: cuisineInfoCpy });\n        });\n    });\n\n    console.log(this.props);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Route path=\"/\" component={Nav} />\n        <Route path=\"/\" component={Header} />\n        <Route\n          path=\"/\"\n          exact\n          render={() => (\n            <Container>\n              <Row>{this.state.cuisineInfo}</Row>\n            </Container>\n          )}\n        />\n        <Route path=\"/cuisines/:id\" exact component={Recipes} />\n        <Route path=\"/recipes/:id\" exact component={Details} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst app = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\nReactDOM.render(app, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}